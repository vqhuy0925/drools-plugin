Drools File
  PACKAGE_STATEMENT
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    NAMESPACE
      PsiElement(JAVA_IDENTIFIER)('org')
      PsiElement(.)('.')
      PsiElement(JAVA_IDENTIFIER)('drools')
      PsiElement(.)('.')
      PsiElement(JAVA_IDENTIFIER)('examples')
      PsiElement(.)('.')
      PsiElement(JAVA_IDENTIFIER)('fibonacci')
    PsiWhiteSpace(' ')
    PsiElement(;)(';')
  PsiWhiteSpace('\n\n')
  IMPORT_STATEMENT
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    IMPORT_QUALIFIER
      QUALIFIED_IDENTIFIER
        IDENTIFIER
          PsiElement(JAVA_IDENTIFIER)('org')
        PsiElement(.)('.')
        IDENTIFIER
          PsiElement(JAVA_IDENTIFIER)('drools')
        PsiElement(.)('.')
        IDENTIFIER
          PsiElement(JAVA_IDENTIFIER)('examples')
        PsiElement(.)('.')
        IDENTIFIER
          PsiElement(JAVA_IDENTIFIER)('fibonacci')
        PsiElement(.)('.')
        IDENTIFIER
          PsiElement(JAVA_IDENTIFIER)('FibonacciExample')
        PsiElement(.)('.')
        IDENTIFIER
          PsiElement(JAVA_IDENTIFIER)('Fibonacci')
  PsiElement(;)(';')
  PsiWhiteSpace('\n\n')
  ATTRIBUTE
    PsiElement(dialect)('dialect')
    PsiWhiteSpace(' ')
    STRING_LITERAL
      PsiElement(STRING_TOKEN)('"mvel"')
  PsiWhiteSpace('\n')
  ATTRIBUTE
    PsiElement(salience)('salience')
    PsiWhiteSpace(' ')
    NUMBER_LITERAL
      PsiElement(INT_TOKEN)('10')
  PsiWhiteSpace('\n')
  RULE_STATEMENT
    PsiElement(rule)('rule')
    PsiWhiteSpace(' ')
    RULE_NAME
      STRING_ID
        PsiElement(STRING_TOKEN)('"Recurse"')
    PsiWhiteSpace('\n    ')
    RULE_ATTRIBUTES
      ATTRIBUTE
        PsiElement(salience)('salience')
        PsiWhiteSpace(' ')
        NUMBER_LITERAL
          PsiElement(INT_TOKEN)('10')
    PsiWhiteSpace('\n    ')
    LHS
      PsiElement(when)('when')
      PsiWhiteSpace('\n        ')
      LHS_EXPRESSION
        LHS_OR
          LHS_AND
            LHS_UNARY
              LHS_NOT
                PsiElement(not)('not')
                PsiWhiteSpace(' ')
                CONDITIONAL_ELEMENT
                  PsiElement(()('(')
                  PsiWhiteSpace(' ')
                  LHS_PATTERN_BIND
                    LHS_PATTERN
                      LHS_PATTERN_TYPE
                        QUALIFIED_IDENTIFIER
                          IDENTIFIER
                            PsiElement(JAVA_IDENTIFIER)('Fibonacci')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      PsiWhiteSpace(' ')
                      CONSTRAINT
                        EQUALITY_EXPR
                          PRIMARY_EXPR
                            IDENTIFIER
                              PsiElement(JAVA_IDENTIFIER)('sequence')
                          PsiWhiteSpace(' ')
                          PsiElement(EQ)('==')
                          PsiWhiteSpace(' ')
                          NUMBER_LITERAL
                            PsiElement(INT_TOKEN)('1')
                      PsiWhiteSpace(' ')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement())(')')
        PsiWhiteSpace('\n        ')
        LHS_OR
          LHS_AND
            LHS_UNARY
              LHS_PATTERN_BIND
                NAME_ID
                  PsiElement(JAVA_IDENTIFIER)('f')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                LHS_PATTERN
                  LHS_PATTERN_TYPE
                    QUALIFIED_IDENTIFIER
                      IDENTIFIER
                        PsiElement(JAVA_IDENTIFIER)('Fibonacci')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  PsiWhiteSpace(' ')
                  CONSTRAINT
                    EQUALITY_EXPR
                      PRIMARY_EXPR
                        IDENTIFIER
                          PsiElement(JAVA_IDENTIFIER)('value')
                      PsiWhiteSpace(' ')
                      PsiElement(EQ)('==')
                      PsiWhiteSpace(' ')
                      UNARY_EXPR
                        PsiElement(-)('-')
                        NUMBER_LITERAL
                          PsiElement(INT_TOKEN)('1')
                  PsiWhiteSpace(' ')
                  PsiElement())(')')
    PsiWhiteSpace('\n    ')
    RHS
      PsiElement(then)('then')
      PsiWhiteSpace('\n        ')
      INSERT_RHS_STATEMENT
        PsiElement(insert)('insert')
        PAR_EXPR
          PsiElement(()('(')
          PsiWhiteSpace(' ')
          PRIMARY_EXPR
            PsiElement(JAVA_IDENTIFIER)('new')
            PsiWhiteSpace(' ')
            CREATOR
              CREATED_QUALIFIED_IDENTIFIER
                QUALIFIED_IDENTIFIER
                  IDENTIFIER
                    PsiElement(JAVA_IDENTIFIER)('Fibonacci')
              CLASS_CREATOR_REST
                ARGUMENTS
                  PsiElement(()('(')
                  PsiWhiteSpace(' ')
                  ADDITIVE_EXPR
                    PRIMARY_EXPR
                      IDENTIFIER
                        PsiElement(JAVA_IDENTIFIER)('f')
                      PsiElement(.)('.')
                      IDENTIFIER
                        PsiElement(JAVA_IDENTIFIER)('sequence')
                    PsiWhiteSpace(' ')
                    PsiElement(-)('-')
                    PsiWhiteSpace(' ')
                    NUMBER_LITERAL
                      PsiElement(INT_TOKEN)('1')
                  PsiWhiteSpace(' ')
                  PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement())(')')
      PsiElement(;)(';')
      PsiWhiteSpace('\n        ')
      JAVA_RHS_STATEMENT
        DroolsCompositeJavaStatementElement(JAVA_STATEMENT)
          PsiExpressionStatement
            PsiMethodCallExpression:System.out.println( "recurse for " + f.sequence )
              PsiReferenceExpression:System.out.println
                PsiReferenceExpression:System.out
                  PsiReferenceExpression:System
                    PsiReferenceParameterList
                      <empty list>
                    PsiIdentifier:System('System')
                  PsiJavaToken:DOT('.')
                  PsiReferenceParameterList
                    <empty list>
                  PsiIdentifier:out('out')
                PsiJavaToken:DOT('.')
                PsiReferenceParameterList
                  <empty list>
                PsiIdentifier:println('println')
              PsiExpressionList
                PsiJavaToken:LPARENTH('(')
                PsiWhiteSpace(' ')
                PsiBinaryExpression:"recurse for " + f.sequence
                  PsiLiteralExpression:"recurse for "
                    PsiJavaToken:STRING_LITERAL('"recurse for "')
                  PsiWhiteSpace(' ')
                  PsiJavaToken:PLUS('+')
                  PsiWhiteSpace(' ')
                  PsiReferenceExpression:f.sequence
                    PsiReferenceExpression:f
                      PsiReferenceParameterList
                        <empty list>
                      PsiIdentifier:f('f')
                    PsiJavaToken:DOT('.')
                    PsiReferenceParameterList
                      <empty list>
                    PsiIdentifier:sequence('sequence')
                PsiWhiteSpace(' ')
                PsiJavaToken:RPARENTH(')')
            PsiJavaToken:SEMICOLON(';')
          PsiWhiteSpace('\n')
    PsiElement(end)('end')
  PsiWhiteSpace('\n\n')
  RULE_STATEMENT
    PsiElement(rule)('rule')
    PsiWhiteSpace(' ')
    RULE_NAME
      STRING_ID
        IDENTIFIER
          PsiElement(JAVA_IDENTIFIER)('Bootstrap')
    PsiWhiteSpace('\n    ')
    LHS
      PsiElement(when)('when')
      PsiWhiteSpace('\n        ')
      LHS_EXPRESSION
        LHS_OR
          LHS_AND
            LHS_UNARY
              LHS_PATTERN_BIND
                NAME_ID
                  PsiElement(JAVA_IDENTIFIER)('f')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                LHS_PATTERN
                  LHS_PATTERN_TYPE
                    QUALIFIED_IDENTIFIER
                      IDENTIFIER
                        PsiElement(JAVA_IDENTIFIER)('Fibonacci')
                  PsiElement(()('(')
                  PsiWhiteSpace(' ')
                  CONSTRAINT
                    CONDITIONAL_OR_EXPR
                      EQUALITY_EXPR
                        PRIMARY_EXPR
                          IDENTIFIER
                            PsiElement(JAVA_IDENTIFIER)('sequence')
                        PsiWhiteSpace(' ')
                        PsiElement(EQ)('==')
                        PsiWhiteSpace(' ')
                        NUMBER_LITERAL
                          PsiElement(INT_TOKEN)('1')
                      PsiWhiteSpace(' ')
                      PsiElement(||)('||')
                      PsiWhiteSpace(' ')
                      EQUALITY_EXPR
                        PRIMARY_EXPR
                          IDENTIFIER
                            PsiElement(JAVA_IDENTIFIER)('value')
                        PsiWhiteSpace(' ')
                        PsiElement(EQ)('==')
                        PsiWhiteSpace(' ')
                        NUMBER_LITERAL
                          PsiElement(INT_TOKEN)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  CONSTRAINT
                    EQUALITY_EXPR
                      PRIMARY_EXPR
                        IDENTIFIER
                          PsiElement(JAVA_IDENTIFIER)('value')
                      PsiWhiteSpace(' ')
                      PsiElement(EQ)('==')
                      PsiWhiteSpace(' ')
                      UNARY_EXPR
                        PsiElement(-)('-')
                        NUMBER_LITERAL
                          PsiElement(INT_TOKEN)('1')
                  PsiWhiteSpace(' ')
                  PsiElement())(')')
    PsiComment(SINGLE_LINE_COMMENT)('// this is a multi-restriction || on a single field')
    PsiWhiteSpace('\n    ')
    RHS
      PsiElement(then)('then')
      PsiWhiteSpace(' \n        ')
      MODIFY_RHS_STATEMENT
        PsiElement(modify)('modify')
        PsiWhiteSpace(' ')
        PAR_EXPR
          PsiElement(()('(')
          PsiWhiteSpace(' ')
          PRIMARY_EXPR
            IDENTIFIER
              PsiElement(JAVA_IDENTIFIER)('f')
          PsiWhiteSpace(' ')
          PsiElement())(')')
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        ASSIGNMENT_EXPR
          PRIMARY_EXPR
            IDENTIFIER
              PsiElement(JAVA_IDENTIFIER)('value')
          PsiWhiteSpace(' ')
          ASSIGNMENT_OPERATOR
            PsiElement(=)('=')
          PsiWhiteSpace(' ')
          NUMBER_LITERAL
            PsiElement(INT_TOKEN)('1')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
      PsiElement(;)(';')
      PsiWhiteSpace('\n        ')
      JAVA_RHS_STATEMENT
        DroolsCompositeJavaStatementElement(JAVA_STATEMENT)
          PsiExpressionStatement
            PsiMethodCallExpression:System.out.println( f.sequence + " == " + f.value )
              PsiReferenceExpression:System.out.println
                PsiReferenceExpression:System.out
                  PsiReferenceExpression:System
                    PsiReferenceParameterList
                      <empty list>
                    PsiIdentifier:System('System')
                  PsiJavaToken:DOT('.')
                  PsiReferenceParameterList
                    <empty list>
                  PsiIdentifier:out('out')
                PsiJavaToken:DOT('.')
                PsiReferenceParameterList
                  <empty list>
                PsiIdentifier:println('println')
              PsiExpressionList
                PsiJavaToken:LPARENTH('(')
                PsiWhiteSpace(' ')
                PsiPolyadicExpression: f.sequence + " == " + f.value
                  PsiReferenceExpression:f.sequence
                    PsiReferenceExpression:f
                      PsiReferenceParameterList
                        <empty list>
                      PsiIdentifier:f('f')
                    PsiJavaToken:DOT('.')
                    PsiReferenceParameterList
                      <empty list>
                    PsiIdentifier:sequence('sequence')
                  PsiWhiteSpace(' ')
                  PsiJavaToken:PLUS('+')
                  PsiWhiteSpace(' ')
                  PsiLiteralExpression:" == "
                    PsiJavaToken:STRING_LITERAL('" == "')
                  PsiWhiteSpace(' ')
                  PsiJavaToken:PLUS('+')
                  PsiWhiteSpace(' ')
                  PsiReferenceExpression:f.value
                    PsiReferenceExpression:f
                      PsiReferenceParameterList
                        <empty list>
                      PsiIdentifier:f('f')
                    PsiJavaToken:DOT('.')
                    PsiReferenceParameterList
                      <empty list>
                    PsiIdentifier:value('value')
                PsiWhiteSpace(' ')
                PsiJavaToken:RPARENTH(')')
            PsiJavaToken:SEMICOLON(';')
          PsiWhiteSpace('\n')
    PsiElement(end)('end')
  PsiWhiteSpace('\n\n')
  RULE_STATEMENT
    PsiElement(rule)('rule')
    PsiWhiteSpace(' ')
    RULE_NAME
      STRING_ID
        IDENTIFIER
          PsiElement(JAVA_IDENTIFIER)('Calculate')
    PsiWhiteSpace('\n    ')
    LHS
      PsiElement(when)('when')
      PsiWhiteSpace('\n        ')
      LHS_EXPRESSION
        LHS_OR
          LHS_AND
            LHS_UNARY
              LHS_PATTERN_BIND
                NAME_ID
                  PsiElement(JAVA_IDENTIFIER)('f1')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                LHS_PATTERN
                  LHS_PATTERN_TYPE
                    QUALIFIED_IDENTIFIER
                      IDENTIFIER
                        PsiElement(JAVA_IDENTIFIER)('Fibonacci')
                  PsiElement(()('(')
                  CONSTRAINT
                    UNARY_ASSIGN_EXPR
                      NAME_ID
                        PsiElement(JAVA_IDENTIFIER)('s1')
                      PsiWhiteSpace(' ')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      PRIMARY_EXPR
                        IDENTIFIER
                          PsiElement(JAVA_IDENTIFIER)('sequence')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  CONSTRAINT
                    EQUALITY_EXPR
                      PRIMARY_EXPR
                        IDENTIFIER
                          PsiElement(JAVA_IDENTIFIER)('value')
                      PsiWhiteSpace(' ')
                      PsiElement(!=)('!=')
                      PsiWhiteSpace(' ')
                      UNARY_EXPR
                        PsiElement(-)('-')
                        NUMBER_LITERAL
                          PsiElement(INT_TOKEN)('1')
                  PsiWhiteSpace(' ')
                  PsiElement())(')')
        PsiWhiteSpace('  ')
        PsiComment(SINGLE_LINE_COMMENT)('// here we bind sequence')
        PsiWhiteSpace('\n        ')
        LHS_OR
          LHS_AND
            LHS_UNARY
              LHS_PATTERN_BIND
                NAME_ID
                  PsiElement(JAVA_IDENTIFIER)('f2')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                LHS_PATTERN
                  LHS_PATTERN_TYPE
                    QUALIFIED_IDENTIFIER
                      IDENTIFIER
                        PsiElement(JAVA_IDENTIFIER)('Fibonacci')
                  PsiElement(()('(')
                  PsiWhiteSpace(' ')
                  CONSTRAINT
                    EQUALITY_EXPR
                      PRIMARY_EXPR
                        IDENTIFIER
                          PsiElement(JAVA_IDENTIFIER)('sequence')
                      PsiWhiteSpace(' ')
                      PsiElement(EQ)('==')
                      PsiWhiteSpace(' ')
                      PAR_EXPR
                        PsiElement(()('(')
                        ADDITIVE_EXPR
                          PRIMARY_EXPR
                            IDENTIFIER
                              PsiElement(JAVA_IDENTIFIER)('s1')
                          PsiWhiteSpace(' ')
                          PsiElement(+)('+')
                          PsiWhiteSpace(' ')
                          NUMBER_LITERAL
                            PsiElement(INT_TOKEN)('1')
                        PsiWhiteSpace(' ')
                        PsiElement())(')')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  CONSTRAINT
                    EQUALITY_EXPR
                      PRIMARY_EXPR
                        IDENTIFIER
                          PsiElement(JAVA_IDENTIFIER)('value')
                      PsiWhiteSpace(' ')
                      PsiElement(!=)('!=')
                      PsiWhiteSpace(' ')
                      UNARY_EXPR
                        PsiElement(-)('-')
                        NUMBER_LITERAL
                          PsiElement(INT_TOKEN)('1')
                  PsiWhiteSpace(' ')
                  PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiComment(SINGLE_LINE_COMMENT)('// here we don't, just to demonstrate the different way bindings can be used')
        PsiWhiteSpace('\n        ')
        LHS_OR
          LHS_AND
            LHS_UNARY
              LHS_PATTERN_BIND
                NAME_ID
                  PsiElement(JAVA_IDENTIFIER)('f3')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                LHS_PATTERN
                  LHS_PATTERN_TYPE
                    QUALIFIED_IDENTIFIER
                      IDENTIFIER
                        PsiElement(JAVA_IDENTIFIER)('Fibonacci')
                  PsiElement(()('(')
                  PsiWhiteSpace(' ')
                  CONSTRAINT
                    EQUALITY_EXPR
                      UNARY_ASSIGN_EXPR
                        NAME_ID
                          PsiElement(JAVA_IDENTIFIER)('s3')
                        PsiWhiteSpace(' ')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        PRIMARY_EXPR
                          IDENTIFIER
                            PsiElement(JAVA_IDENTIFIER)('sequence')
                      PsiWhiteSpace(' ')
                      PsiElement(EQ)('==')
                      PsiWhiteSpace(' ')
                      PAR_EXPR
                        PsiElement(()('(')
                        ADDITIVE_EXPR
                          PRIMARY_EXPR
                            IDENTIFIER
                              PsiElement(JAVA_IDENTIFIER)('f2')
                            PsiElement(.)('.')
                            IDENTIFIER
                              PsiElement(JAVA_IDENTIFIER)('sequence')
                          PsiWhiteSpace(' ')
                          PsiElement(+)('+')
                          PsiWhiteSpace(' ')
                          NUMBER_LITERAL
                            PsiElement(INT_TOKEN)('1')
                        PsiWhiteSpace(' ')
                        PsiElement())(')')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  CONSTRAINT
                    EQUALITY_EXPR
                      PRIMARY_EXPR
                        IDENTIFIER
                          PsiElement(JAVA_IDENTIFIER)('value')
                      PsiWhiteSpace(' ')
                      PsiElement(EQ)('==')
                      PsiWhiteSpace(' ')
                      UNARY_EXPR
                        PsiElement(-)('-')
                        NUMBER_LITERAL
                          PsiElement(INT_TOKEN)('1')
                  PsiWhiteSpace(' ')
                  PsiElement())(')')
        PsiWhiteSpace('\n        ')
        LHS_OR
          LHS_AND
            LHS_UNARY
              LHS_PATTERN_BIND
                NAME_ID
                  PsiElement(JAVA_IDENTIFIER)('f3')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                LHS_PATTERN
                  LHS_PATTERN_TYPE
                    QUALIFIED_IDENTIFIER
                      IDENTIFIER
                        PsiElement(JAVA_IDENTIFIER)('Fibonacci')
                  PsiElement(()('(')
                  PsiWhiteSpace(' ')
                  CONSTRAINT
                    EQUALITY_EXPR
                      UNARY_ASSIGN_EXPR
                        NAME_ID
                          PsiElement(JAVA_IDENTIFIER)('s3')
                        PsiWhiteSpace(' ')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        PRIMARY_EXPR
                          IDENTIFIER
                            PsiElement(JAVA_IDENTIFIER)('sequence')
                      PsiWhiteSpace(' ')
                      PsiElement(>=)('>=')
                      PsiWhiteSpace(' ')
                      NUMBER_LITERAL
                        PsiElement(INT_TOKEN)('1')
                      PsiWhiteSpace(' ')
                      PsiElement(&&)('&&')
                      PsiWhiteSpace(' ')
                      PsiElement(<=)('<=')
                      PsiWhiteSpace(' ')
                      NUMBER_LITERAL
                        PsiElement(INT_TOKEN)('21')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  CONSTRAINT
                    EQUALITY_EXPR
                      PRIMARY_EXPR
                        IDENTIFIER
                          PsiElement(JAVA_IDENTIFIER)('value')
                      PsiWhiteSpace(' ')
                      PsiElement(EQ)('==')
                      PsiWhiteSpace(' ')
                      UNARY_EXPR
                        PsiElement(-)('-')
                        NUMBER_LITERAL
                          PsiElement(INT_TOKEN)('1')
                  PsiWhiteSpace(' ')
                  PsiElement())(')')
    PsiWhiteSpace('\n    ')
    RHS
      PsiElement(then)('then')
      PsiWhiteSpace('\n        ')
      MODIFY_RHS_STATEMENT
        PsiElement(modify)('modify')
        PsiWhiteSpace(' ')
        PAR_EXPR
          PsiElement(()('(')
          PsiWhiteSpace(' ')
          PRIMARY_EXPR
            IDENTIFIER
              PsiElement(JAVA_IDENTIFIER)('f3')
          PsiWhiteSpace(' ')
          PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        ASSIGNMENT_EXPR
          PRIMARY_EXPR
            IDENTIFIER
              PsiElement(JAVA_IDENTIFIER)('value')
          PsiWhiteSpace(' ')
          ASSIGNMENT_OPERATOR
            PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ADDITIVE_EXPR
            PRIMARY_EXPR
              IDENTIFIER
                PsiElement(JAVA_IDENTIFIER)('f1')
              PsiElement(.)('.')
              IDENTIFIER
                PsiElement(JAVA_IDENTIFIER)('value')
            PsiWhiteSpace(' ')
            PsiElement(+)('+')
            PsiWhiteSpace(' ')
            PRIMARY_EXPR
              IDENTIFIER
                PsiElement(JAVA_IDENTIFIER)('f2')
              PsiElement(.)('.')
              IDENTIFIER
                PsiElement(JAVA_IDENTIFIER)('value')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
      PsiElement(;)(';')
      PsiWhiteSpace('\n        ')
      JAVA_RHS_STATEMENT
        DroolsCompositeJavaStatementElement(JAVA_STATEMENT)
          PsiExpressionStatement
            PsiMethodCallExpression:System.out.println( s3 + " == " + f3.value )
              PsiReferenceExpression:System.out.println
                PsiReferenceExpression:System.out
                  PsiReferenceExpression:System
                    PsiReferenceParameterList
                      <empty list>
                    PsiIdentifier:System('System')
                  PsiJavaToken:DOT('.')
                  PsiReferenceParameterList
                    <empty list>
                  PsiIdentifier:out('out')
                PsiJavaToken:DOT('.')
                PsiReferenceParameterList
                  <empty list>
                PsiIdentifier:println('println')
              PsiExpressionList
                PsiJavaToken:LPARENTH('(')
                PsiWhiteSpace(' ')
                PsiPolyadicExpression: s3 + " == " + f3.value
                  PsiReferenceExpression:s3
                    PsiReferenceParameterList
                      <empty list>
                    PsiIdentifier:s3('s3')
                  PsiWhiteSpace(' ')
                  PsiJavaToken:PLUS('+')
                  PsiWhiteSpace(' ')
                  PsiLiteralExpression:" == "
                    PsiJavaToken:STRING_LITERAL('" == "')
                  PsiWhiteSpace(' ')
                  PsiJavaToken:PLUS('+')
                  PsiWhiteSpace(' ')
                  PsiReferenceExpression:f3.value
                    PsiReferenceExpression:f3
                      PsiReferenceParameterList
                        <empty list>
                      PsiIdentifier:f3('f3')
                    PsiJavaToken:DOT('.')
                    PsiReferenceParameterList
                      <empty list>
                    PsiIdentifier:value('value')
                PsiWhiteSpace(' ')
                PsiJavaToken:RPARENTH(')')
            PsiJavaToken:SEMICOLON(';')
            PsiWhiteSpace(' ')
            PsiComment(END_OF_LINE_COMMENT)('// see how you can access pattern and field  bindings')
          PsiWhiteSpace('\n')
    PsiElement(end)('end')